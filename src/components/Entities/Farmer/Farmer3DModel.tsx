/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/models/Farmer.glb -t -r public
*/

import * as THREE from "three";
import { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Farmer_Feet_1: THREE.SkinnedMesh;
    Farmer_Feet_2: THREE.SkinnedMesh;
    Farmer_Pants: THREE.SkinnedMesh;
    Farmer_Body_1: THREE.SkinnedMesh;
    Farmer_Body_2: THREE.SkinnedMesh;
    Farmer_Body_3: THREE.SkinnedMesh;
    Farmer_Body_4: THREE.SkinnedMesh;
    Farmer_Head_1: THREE.SkinnedMesh;
    Farmer_Head_2: THREE.SkinnedMesh;
    Farmer_Head_3: THREE.SkinnedMesh;
    Farmer_Head_4: THREE.SkinnedMesh;
    Farmer_Head_5: THREE.SkinnedMesh;
    Root: THREE.Bone;
  };
  materials: {
    Brown2: THREE.MeshStandardMaterial;
    Brown: THREE.MeshStandardMaterial;
    LightBlue: THREE.MeshStandardMaterial;
    Skin: THREE.MeshStandardMaterial;
    Beige: THREE.MeshStandardMaterial;
    Eyebrows: THREE.MeshStandardMaterial;
    Red: THREE.MeshStandardMaterial;
    Eye: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "CharacterArmature|Death"
  | "CharacterArmature|Gun_Shoot"
  | "CharacterArmature|HitRecieve"
  | "CharacterArmature|HitRecieve_2"
  | "CharacterArmature|Idle"
  | "CharacterArmature|Idle_Gun"
  | "CharacterArmature|Idle_Gun_Pointing"
  | "CharacterArmature|Idle_Gun_Shoot"
  | "CharacterArmature|Idle_Neutral"
  | "CharacterArmature|Idle_Sword"
  | "CharacterArmature|Interact"
  | "CharacterArmature|Kick_Left"
  | "CharacterArmature|Kick_Right"
  | "CharacterArmature|Punch_Left"
  | "CharacterArmature|Punch_Right"
  | "CharacterArmature|Roll"
  | "CharacterArmature|Run"
  | "CharacterArmature|Run_Back"
  | "CharacterArmature|Run_Left"
  | "CharacterArmature|Run_Right"
  | "CharacterArmature|Run_Shoot"
  | "CharacterArmature|Sword_Slash"
  | "CharacterArmature|Walk"
  | "CharacterArmature|Wave";

type GLTFActions = Record<ActionName, THREE.AnimationAction>;

const Farmer3DModel = (props: JSX.IntrinsicElements["group"]) => {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/models/Farmer.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);

  useEffect(() => {
    actions["CharacterArmature|Walk"]?.play();
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group
            name="CharacterArmature"
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          >
            <primitive object={nodes.Root} />
          </group>
          <group name="Farmer_Feet" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh
              name="Farmer_Feet_1"
              geometry={nodes.Farmer_Feet_1.geometry}
              material={materials.Brown2}
              skeleton={nodes.Farmer_Feet_1.skeleton}
            />
            <skinnedMesh
              name="Farmer_Feet_2"
              geometry={nodes.Farmer_Feet_2.geometry}
              material={materials.Brown}
              skeleton={nodes.Farmer_Feet_2.skeleton}
            />
          </group>
          <skinnedMesh
            name="Farmer_Pants"
            geometry={nodes.Farmer_Pants.geometry}
            material={materials.LightBlue}
            skeleton={nodes.Farmer_Pants.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <group name="Farmer_Body" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh
              name="Farmer_Body_1"
              geometry={nodes.Farmer_Body_1.geometry}
              material={materials.Brown}
              skeleton={nodes.Farmer_Body_1.skeleton}
            />
            <skinnedMesh
              name="Farmer_Body_2"
              geometry={nodes.Farmer_Body_2.geometry}
              material={materials.LightBlue}
              skeleton={nodes.Farmer_Body_2.skeleton}
            />
            <skinnedMesh
              name="Farmer_Body_3"
              geometry={nodes.Farmer_Body_3.geometry}
              material={materials.Skin}
              skeleton={nodes.Farmer_Body_3.skeleton}
            />
            <skinnedMesh
              name="Farmer_Body_4"
              geometry={nodes.Farmer_Body_4.geometry}
              material={materials.Beige}
              skeleton={nodes.Farmer_Body_4.skeleton}
            />
          </group>
          <group name="Farmer_Head" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh
              name="Farmer_Head_1"
              geometry={nodes.Farmer_Head_1.geometry}
              material={materials.Skin}
              skeleton={nodes.Farmer_Head_1.skeleton}
            />
            <skinnedMesh
              name="Farmer_Head_2"
              geometry={nodes.Farmer_Head_2.geometry}
              material={materials.Beige}
              skeleton={nodes.Farmer_Head_2.skeleton}
            />
            <skinnedMesh
              name="Farmer_Head_3"
              geometry={nodes.Farmer_Head_3.geometry}
              material={materials.Eyebrows}
              skeleton={nodes.Farmer_Head_3.skeleton}
            />
            <skinnedMesh
              name="Farmer_Head_4"
              geometry={nodes.Farmer_Head_4.geometry}
              material={materials.Red}
              skeleton={nodes.Farmer_Head_4.skeleton}
            />
            <skinnedMesh
              name="Farmer_Head_5"
              geometry={nodes.Farmer_Head_5.geometry}
              material={materials.Eye}
              skeleton={nodes.Farmer_Head_5.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
};

useGLTF.preload("/models/Farmer.glb");

export default Farmer3DModel;
