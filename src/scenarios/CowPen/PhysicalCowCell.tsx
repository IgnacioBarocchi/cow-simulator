/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/models/Cowcell.gltf -t -r public
*/
import { CuboidCollider, RigidBody } from "@react-three/rapier";

// type GLTFResult = GLTF & {
//   nodes: {
//     Cow_1: THREE.Mesh;
//     Cow_2: THREE.Mesh;
//     Cow_3: THREE.Mesh;
//     Cow_4: THREE.Mesh;
//     Cow_5: THREE.Mesh;
//     Cow_6: THREE.Mesh;
//     Cow_7: THREE.Mesh;
//     foodcontainer: THREE.Mesh;
//     Cylinder001: THREE.Mesh;
//     Cylinder002: THREE.Mesh;
//     Cube001: THREE.Mesh;
//     Cube002: THREE.Mesh;
//     Cube003: THREE.Mesh;
//     Cube004: THREE.Mesh;
//     Cylinder003: THREE.Mesh;
//     Cylinder004: THREE.Mesh;
//     Cylinder005: THREE.Mesh;
//     Cylinder006: THREE.Mesh;
//     Cylinder007: THREE.Mesh;
//     Cylinder008: THREE.Mesh;
//     Cylinder009: THREE.Mesh;
//     Cylinder010: THREE.Mesh;
//     Cylinder011: THREE.Mesh;
//     Cylinder012: THREE.Mesh;
//     Cylinder013: THREE.Mesh;
//     Cylinder014: THREE.Mesh;
//     Cube005: THREE.Mesh;
//     Cube006: THREE.Mesh;
//   };
//   materials: {
//     Main: THREE.MeshStandardMaterial;
//     Main_Light: THREE.MeshStandardMaterial;
//     Muzzle: THREE.MeshStandardMaterial;
//     Hooves: THREE.MeshStandardMaterial;
//     Eye_Black: THREE.MeshStandardMaterial;
//     Eye_White: THREE.MeshStandardMaterial;
//     Horns: THREE.MeshStandardMaterial;
//     Plastic: THREE.MeshStandardMaterial;
//     metal: THREE.MeshStandardMaterial;
//     Column: THREE.MeshStandardMaterial;
//   };
// };

export default function PhysicalCowCell() {
  return (
    <RigidBody
      type={"fixed"}
      colliders={false}
      restitution={0}
      friction={3}
      density={500}
    >
      <CuboidCollider position={[0, 0.5, -2]} args={[2, 0.5, 0.05]} />
      <CuboidCollider position={[0, 0.5, 0.5]} args={[2, 0.5, 0.05]} />

      <CuboidCollider
        position={[-2, 0.5, -0.5]}
        rotation={[0, Math.PI, 0]}
        args={[0.05, 0.5, 1.5]}
      />
      <CuboidCollider
        position={[2, 0.5, -0.5]}
        rotation={[0, Math.PI, 0]}
        args={[0.05, 0.5, 1.5]}
      />
      {/* <Cowcell /> */}
    </RigidBody>
  );
}
